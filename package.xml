<?xml version="1.0" encoding="UTF-8"?>
<package packagerversion="1.9.1" version="2.0" xmlns="http://pear.php.net/dtd/package-2.0" xmlns:tasks="http://pear.php.net/dtd/tasks-1.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pear.php.net/dtd/tasks-1.0 http://pear.php.net/dtd/tasks-1.0.xsd http://pear.php.net/dtd/package-2.0 http://pear.php.net/dtd/package-2.0.xsd">
 <name>teds</name>
 <channel>pecl.php.net</channel>
 <summary>teds extension</summary>
 <description>teds (Tentative Extra Data Structures) is a collection of data structures and iterable functionality</description>
 <lead>
  <name>Tyson Andre</name>
  <user>tandre</user>
  <email>tandre@php.net</email>
  <active>yes</active>
 </lead>
 <date>2021-09-26</date>
 <time>16:00:00</time>
 <version>
  <release>0.4.2dev</release>
  <api>0.4.2dev</api>
 </version>
 <stability>
  <release>stable</release>
  <api>stable</api>
 </stability>
 <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
 <notes>
* Add Teds\array_value_first(), Teds\array_value_last()
* Add `Teds\stable_compare($v1, $v2): int` for a stable comparison function of arbitrary values. (see tests/misc/stable_compare.phpt).
  Like strcmp, this returns a negative value for less than, and positive for greater than, and 0 for equality.
  Note that php's `&lt;` operator is not stable. `'10' &lt; '0a' &lt; '1b' &lt; '9' &lt; '10'`.
  stable_compare fixes that by strictly ordering:
  `null &lt; false &lt; true &lt; int,float &lt; string &lt; array &lt; object &lt; resource`.
  (objects and resources are compared by id, and arrays are compared recursively. Numbers are compared numerically. If an int is equal to a float, then the int is first)
  (strings use strcmp)
* Make Deque iteration account for calls to shift/unshift tracking the position of the front of the Deque.
  Calls to shift/unshift will do the following:
  - Increase/Decrease the value returned by the iterator's key() by the number of elements added/removed to/from the front of the Deque. (`$deque[$iteratorKey] === $iteratorValue` at the time the key and value are returned).
  - Repeated calls to shift will cause valid() to return false if the iterator's position ends up before the start of the Deque at the time iteration resumes.
  - They will not cause the remaining values to be iterated over more than once or skipped.
 </notes>
 <contents>
  <dir name="/">
   <file name="config.m4" role="src" />
   <file name="config.w32" role="src" />
   <file name="teds.c" role="src" />
   <file name="teds.h" role="src" />
   <file name="teds_arginfo.h" role="src" />
   <file name="teds_deque_arginfo.h" role="src" />
   <file name="teds_deque.c" role="src" />
   <file name="teds_deque.h" role="src" />
   <file name="teds_deque.stub.php" role="src" />
   <file name="teds_immutablekeyvaluesequence_arginfo.h" role="src" />
   <file name="teds_immutablekeyvaluesequence.c" role="src" />
   <file name="teds_immutablekeyvaluesequence.h" role="src" />
   <file name="teds_immutablekeyvaluesequence.stub.php" role="src" />
   <file name="teds_immutablesequence_arginfo.h" role="src" />
   <file name="teds_immutablesequence.c" role="src" />
   <file name="teds_immutablesequence.h" role="src" />
   <file name="teds_immutablesequence.stub.php" role="src" />
   <file name="teds_keyvaluevector_arginfo.h" role="src" />
   <file name="teds_keyvaluevector.c" role="src" />
   <file name="teds_keyvaluevector.h" role="src" />
   <file name="teds_keyvaluevector.stub.php" role="src" />
   <file name="teds_util.h" role="src" />
   <file name="teds_vector_arginfo.h" role="src" />
   <file name="teds_vector.c" role="src" />
   <file name="teds_vector.h" role="src" />
   <file name="teds_vector.stub.php" role="src" />
   <file name="php_teds.h" role="src" />
   <file name="README.md" role="doc" />
   <file name="COPYING" role="doc" />
   <!-- Generated by: find tests -type f|grep 'phpt$' |LC_ALL=C sort|sed 's,^tests/\(.*\),    <file name="\1" role="test" />,' -->
   <dir name="tests">
    <file name="Deque/Deque.phpt" role="test" />
    <file name="Deque/aggregate.phpt" role="test" />
    <file name="Deque/arrayCast.phpt" role="test" />
    <file name="Deque/clear.phpt" role="test" />
    <file name="Deque/clone.phpt" role="test" />
    <file name="Deque/contains.phpt" role="test" />
    <file name="Deque/exceptionhandler.phpt" role="test" />
    <file name="Deque/isEmpty.phpt" role="test" />
    <file name="Deque/iterator.phpt" role="test" />
    <file name="Deque/offsetGet.phpt" role="test" />
    <file name="Deque/offsetGetShifted.phpt" role="test" />
    <file name="Deque/popMany.phpt" role="test" />
    <file name="Deque/push_multiple.phpt" role="test" />
    <file name="Deque/push_pop.phpt" role="test" />
    <file name="Deque/push_pop_both.phpt" role="test" />
    <file name="Deque/reinit_forbidden.phpt" role="test" />
    <file name="Deque/serialization.phpt" role="test" />
    <file name="Deque/setValueAt.phpt" role="test" />
    <file name="Deque/set_state.phpt" role="test" />
    <file name="Deque/shift.phpt" role="test" />
    <file name="Deque/toArray.phpt" role="test" />
    <file name="Deque/traversable.phpt" role="test" />
    <file name="Deque/unserialize.phpt" role="test" />
    <file name="Deque/unshift.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/ImmutableKeyValueSequence.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/aggregate.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/clone.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/contains.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/exceptionhandler.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/from_pairs.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/keyAt_valueAt.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/keys_values.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/reinit_forbidden.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/serialization.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/set_state.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/traversable.phpt" role="test" />
    <file name="ImmutableKeyValueSequence/unserialize.phpt" role="test" />
    <file name="ImmutableSequence/ImmutableSequence.phpt" role="test" />
    <file name="ImmutableSequence/aggregate.phpt" role="test" />
    <file name="ImmutableSequence/clone.phpt" role="test" />
    <file name="ImmutableSequence/contains.phpt" role="test" />
    <file name="ImmutableSequence/exceptionhandler.phpt" role="test" />
    <file name="ImmutableSequence/offsetGet.phpt" role="test" />
    <file name="ImmutableSequence/reinit_forbidden.phpt" role="test" />
    <file name="ImmutableSequence/serialization.phpt" role="test" />
    <file name="ImmutableSequence/set_state.phpt" role="test" />
    <file name="ImmutableSequence/toArray.phpt" role="test" />
    <file name="ImmutableSequence/traversable.phpt" role="test" />
    <file name="ImmutableSequence/unserialize.phpt" role="test" />
    <file name="KeyValueVector/KeyValueSequence.phpt" role="test" />
    <file name="KeyValueVector/aggregate.phpt" role="test" />
    <file name="KeyValueVector/clone.phpt" role="test" />
    <file name="KeyValueVector/contains.phpt" role="test" />
    <file name="KeyValueVector/exceptionhandler.phpt" role="test" />
    <file name="KeyValueVector/from_pairs.phpt" role="test" />
    <file name="KeyValueVector/keyAt_valueAt.phpt" role="test" />
    <file name="KeyValueVector/keys_values.phpt" role="test" />
    <file name="KeyValueVector/push_pop.phpt" role="test" />
    <file name="KeyValueVector/reinit_forbidden.phpt" role="test" />
    <file name="KeyValueVector/serialization.phpt" role="test" />
    <file name="KeyValueVector/setKeyAt.phpt" role="test" />
    <file name="KeyValueVector/setSize.phpt" role="test" />
    <file name="KeyValueVector/set_state.phpt" role="test" />
    <file name="KeyValueVector/traversable.phpt" role="test" />
    <file name="KeyValueVector/unserialize.phpt" role="test" />
    <file name="Vector/Vector.phpt" role="test" />
    <file name="Vector/aggregate.phpt" role="test" />
    <file name="Vector/arrayCast.phpt" role="test" />
    <file name="Vector/clear.phpt" role="test" />
    <file name="Vector/clone.phpt" role="test" />
    <file name="Vector/contains.phpt" role="test" />
    <file name="Vector/exceptionhandler.phpt" role="test" />
    <file name="Vector/filter.phpt" role="test" />
    <file name="Vector/isEmpty.phpt" role="test" />
    <file name="Vector/isset.phpt" role="test" />
    <file name="Vector/map.phpt" role="test" />
    <file name="Vector/offsetGet.phpt" role="test" />
    <file name="Vector/push_pop.phpt" role="test" />
    <file name="Vector/reinit_forbidden.phpt" role="test" />
    <file name="Vector/reserve.phpt" role="test" />
    <file name="Vector/serialization.phpt" role="test" />
    <file name="Vector/setSize.phpt" role="test" />
    <file name="Vector/setSize_default.phpt" role="test" />
    <file name="Vector/setValueAt.phpt" role="test" />
    <file name="Vector/set_state.phpt" role="test" />
    <file name="Vector/shrink_capacity.phpt" role="test" />
    <file name="Vector/toArray.phpt" role="test" />
    <file name="Vector/traversable.phpt" role="test" />
    <file name="Vector/unserialize.phpt" role="test" />
    <file name="array/array_value_first.phpt" role="test" />
    <file name="iterable/all_array.phpt" role="test" />
    <file name="iterable/all_traversable.phpt" role="test" />
    <file name="iterable/any_array.phpt" role="test" />
    <file name="iterable/any_traversable.phpt" role="test" />
    <file name="iterable/find_array.phpt" role="test" />
    <file name="iterable/find_traversable.phpt" role="test" />
    <file name="iterable/fold_array.phpt" role="test" />
    <file name="iterable/fold_traversable.phpt" role="test" />
    <file name="iterable/includes_value.phpt" role="test" />
    <file name="iterable/none_array.phpt" role="test" />
    <file name="iterable/none_traversable.phpt" role="test" />
    <file name="misc/stable_compare.phpt" role="test" />
   </dir>
  </dir>
 </contents>
 <dependencies>
  <required>
   <php>
    <min>8.0.0</min>
   </php>
   <pearinstaller>
    <min>1.10</min>
   </pearinstaller>
  </required>
 </dependencies>
 <providesextension>teds</providesextension>
 <extsrcrelease />
 <changelog>
  <release>
   <date>2021-09-26</date>
   <time>16:00:00</time>
   <version>
    <release>0.4.1</release>
    <api>0.4.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Fix computation of next power of 2 for sizes of `2 ** 32` or larger.
   </notes>
  </release>
  <release>
   <date>2021-09-26</date>
   <time>16:00:00</time>
   <version>
    <release>0.4.0</release>
    <api>0.4.0</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Backwards incompatible change: Change `Deque` APIs to be consistent with SplDoublyLinkedList and `array_push`: change pushBack/popBack/pushFront/popFront to push/pop/unshift/shift
* Backwards incompatible change: Remove `$preserve_keys` flag from `Vector::__construct` (Always reindex keys in order of iteration instead).
* Add isEmpty() method to datastructures
* Make exceeding the capacity limit for a vector a fatal error.
* Make Deque::push() and unshift() variadic.
 </notes>
  </release>
  <release>
   <date>2021-09-19</date>
   <time>16:00:00</time>
   <version>
    <release>0.3.0</release>
    <api>0.3.0</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Backwards incompatible change: Change `Vector::indexOf` return type from `int|false` to `?int` (and all other `indexOf*` methods in other data structures)
* Backwards incompatible change: Change `valueAt`/`setValueAt` to get/set in Deque, Vector, and ImmutableSequence
* Add optional parameter `$value = null` to `Vector::setSize()` to allow overriding the value used for padding when lengthening an array.
* Change exception handling for sizes/capacities that are definitely too large to allocate.
* Make Vector::push() variadic and accept 0 or more arguments, like `array_push` does.
* Reclaim unused memory in Deque when roughly a quarter or less of the internal buffer is used.
* Optimize performance of Deque, always use powers of 2 for the capacity of Deque to speed up reads/writes.
   </notes>
  </release>
  <release>
   <date>2021-09-16</date>
   <time>16:00:00</time>
   <version>
    <release>0.2.1</release>
    <api>0.2.1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Support `$vector[] = $value` and `$deque[] = $value` assignments to append to Vector/Deque.
* Add map() and filter() functions to Vector.
   </notes>
  </release>
  <release>
   <date>2021-09-12</date>
   <time>16:00:00</time>
   <version>
    <release>0.2.0</release>
    <api>0.2.0</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Breaking change: Change `Teds\Vector::__construct` to add an additional parameter `bool $preserveKeys = true`,
  and use the original keys of arrays/Traversables by default, throwing for non-integers and invalid integer offsets.
  (Similar to the behavior of SplFixedArray::fromArray)
* Convert references to non-references when creating values from iterables.
* Minor performance improvements of `Teds\Vector`
   </notes>
  </release>
  <release>
   <date>2021-09-10</date>
   <time>16:00:00</time>
   <version>
    <release>0.1.1</release>
    <api>0.1.1</api>
   </version>
   <stability>
    <release>stable</release>
    <api>stable</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Add Teds\KeyValueVector
* Fix edge cases in Teds\Vector setSize
   </notes>
  </release>
  <release>
   <date>2021-08-24</date>
   <time>16:00:00</time>
   <version>
    <release>0.1.0a1</release>
    <api>0.1.0a1</api>
   </version>
   <stability>
    <release>alpha</release>
    <api>alpha</api>
   </stability>
   <license uri="https://github.com/TysonAndre/teds/blob/main/COPYING">BSD-3-Clause</license>
   <notes>
* Initial commit
   </notes>
  </release>
 </changelog>
</package>
